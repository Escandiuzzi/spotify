# -*- coding: utf-8 -*-
"""spotify.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FGsuzWTjiLhw7lo8lC_9LlKPc3jwSnI6

```
**Mount Google Drive**
```
"""

from google.colab import drive
drive.mount("/content/drive")

"""Check if file exists"""

!ls /content/drive/MyDrive/filtered_data.csv

"""Import pandas"""

import pandas as pd
import matplotlib.pyplot as plt

"""Read file"""

data = pd.read_csv("/content/drive/MyDrive/filtered_data.csv")

"""Rename column"""

data = data.rename(columns={'region': 'country'})

countries = data['country'].unique()

grouped_data = {}

for country in countries:
  condition = data['country'] == country
  data_from_country = data[condition]
  grouped_data[country] = data_from_country

data[['streams', 'af_danceability', 'af_loudness', 'af_energy', 'af_speechiness', 'af_acousticness', 'af_instrumentalness', 'af_liveness', 'af_valence', 'af_tempo', 'af_time_signature']].fillna(0, inplace=True)

grouped = data.groupby('country')

mean_streams_values = grouped[['streams']].mean()
mean_af_danceability_values = grouped[['af_danceability']].mean()
mean_af_loudness_values = grouped[['af_loudness']].mean()
mean_af_energy_values = grouped[['af_energy']].mean()
mean_af_speechiness_values = grouped[['af_speechiness']].mean()
mean_af_acousticness_values = grouped[['af_acousticness']].mean()
mean_af_instrumentalness_values = grouped[['af_instrumentalness']].mean()
mean_af_liveness_values = grouped[['af_liveness']].mean()
mean_af_valence_values = grouped[['af_valence']].mean()
mean_af_tempo_values = grouped[['af_tempo']].mean()
mean_af_time_signature_values = grouped[['af_time_signature']].mean()

print(mean_streams_values)
print(mean_af_danceability_values)
print(mean_af_loudness_values)
print(mean_af_energy_values)
print(mean_af_speechiness_values)
print(mean_af_acousticness_values)
print(mean_af_instrumentalness_values)
print(mean_af_liveness_values)
print(mean_af_valence_values)
print(mean_af_tempo_values)
print(mean_af_time_signature_values)

sorted_data = mean_streams_values.sort_values('streams', ascending=False)
sorted_data.plot(kind='barh')

plt.title('Number of Streams')
plt.xlabel('Country')
plt.ylabel('Mean Value')

plt.show()

mean_af_danceability_values.plot(kind='bar')

plt.title('Danceability')
plt.xlabel('Country')
plt.ylabel('Mean Value')

plt.show()

ax = mean_af_loudness_values.plot(kind='kde')

ax.invert_yaxis()

plt.title('Loudness')
plt.xlabel('Country')
plt.ylabel('Mean Value')

plt.show()

# Plot the mean values for each group
mean_af_energy_values.plot(kind='line')

# Add title and labels
plt.title('Energy')
plt.xlabel('Country')
plt.ylabel('Mean Value')

# Show the plot
plt.show()

# Plot the mean values for each group
mean_af_speechiness_values.plot(kind='density')

# Add title and labels
plt.title('Speechiness')
plt.xlabel('Country')
plt.ylabel('Mean Value')

# Show the plot
plt.show()

# Plot the mean values for each group
mean_af_acousticness_values.plot(kind='area')

# Add title and labels
plt.title('Acousticness')
plt.xlabel('Country')
plt.ylabel('Mean Value')

# Show the plot
plt.show()

# Plot the mean values for each group
mean_af_instrumentalness_values.plot(kind='bar')

# Add title and labels
plt.title('Instrumentalness')
plt.xlabel('Country')
plt.ylabel('Mean Value')

# Show the plot
plt.show()

# Plot the mean values for each group
mean_af_liveness_values.plot(kind='bar')

# Add title and labels
plt.title('Liveness')
plt.xlabel('Country')
plt.ylabel('Mean Value')

# Show the plot
plt.show()

# Plot the mean values for each group
mean_af_valence_values.plot(kind='bar')

# Add title and labels
plt.title('Valence')
plt.xlabel('Country')
plt.ylabel('Mean Value')

# Show the plot
plt.show()

# Plot the mean values for each group
mean_af_tempo_values.plot(kind='bar')

# Add title and labels
plt.title('Tempo')
plt.xlabel('Country')
plt.ylabel('Mean Value')

# Show the plot
plt.show()

# Plot the mean values for each group
mean_af_time_signature_values.plot(kind='bar')

# Add title and labels
plt.title('Time')
plt.xlabel('Country')
plt.ylabel('Mean Value')

# Show the plot
plt.show()